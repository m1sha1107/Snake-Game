									from PIL.Image
#image is the main modue of pil
#class variables
	size (width, height)
	format
	mode

open("dir") #creates image ob from file
new("mode", (width, height), *color)

im.show() #opens image
im.save("name.format") #saves image
im.close()

effect_noise(size, sigma) #sigma max 128
linear_gradient("mode")
radial_gradient("mode")



blend(im1, im2, alpha) #blends images with constant alpha
im.split() #splits image into it's constituent bands
merge("mode", (rob, gob, bob)) #merges bands into images
composite(im1, im2, im3)
eval(imob,args)


im.crop((x1, y1, x2, y2)) #crops image
im.paste(region, (x, y) #pastes region onto coords

im.resize((x, y))
im.rotate(deg)
im.transpose()
#flips or rotates image. valid params:
PIL.Image.FLIP_LEFT_RIGHT, PIL.Image.FLIP_TOP_BOTTOM, PIL.Image.ROTATE_90, PIL.Image.ROTATE_180, PIL.Image.ROTATE_270 or PIL.Image.TRANSPOSE

im.point(func)

im.convert("mode") # returns im with converted mode

im.seek(frame)
im.draft("mode", (x1, y1))
									from PIL.ImageDraw
Draw(imob, *mode) #creates object to draw with
arc([coords], *start, *end, *fill, *width)
line((coords), *fill, *width)
ellipse([coords], *fill, *outline, *width)
point([coords], *fill, *outline)
rectangle([coords], *fill, *outline)

									from PIL.PixelAccess
__setitem__(xy, color)
__getitem__(self, xy)

									from PIL.ImageFilter
im.filter(func)
#valid func params:
BLUR, CONTOUR, DETAIL, EDGE_ENHANCE, EDGE_ENHANCE_MORE, EMBOSS, FIND_EDGES, SHARPEN, SMOOTH, SMOOTH_MORE

									from PIL.ImageEnhance
contrast(image)
Color(image)
Contrast(image)
Brightness(image)
Sharpness(image)[
enh.enhance(n)
